"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var bodyParser = require("body-parser");
var cors = require("cors");
var express = require("express");
var Database_1 = require("./services/Database");
var database = new Database_1.Database();
database.init();
var AltcoinRoutes_1 = require("./routes/AltcoinRoutes");
var ListenerRoutes_1 = require("./routes/ListenerRoutes");
var XRPRoutes_1 = require("./routes/XRPRoutes");
var Listener_1 = require("./services/Altcoin/Listener");
var Listener_2 = require("./services/XRP/Listener");
var app = express();
app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());
var whitelist = [];
var corsOptions = {};
app.use(cors(corsOptions));
var PORT = process.env.PORT || 8080;
app.get('/', function (req, res) {
    res.send('Hello world :)');
});
app.use('/altcoin', AltcoinRoutes_1.AltcoinRoutes);
app.use('/XRP', XRPRoutes_1.XRPRoutes);
app.use('/listener', ListenerRoutes_1.ListenerRoutes);
var LTCListener = new Listener_1.Listener('LTC');
LTCListener.watchForDeposits();
var BTCListener = new Listener_1.Listener('BTC');
BTCListener.watchForDeposits();
var DASHListener = new Listener_1.Listener('DASH');
DASHListener.watchForDeposits();
var DOGEListener = new Listener_1.Listener('DOGE');
DOGEListener.watchForDeposits();
var XRPListener = new Listener_2.Listener();
XRPListener.watchForDeposits();
app.listen(PORT, function () {
    console.log("Node server listening on http://localhost:" + PORT);
});
